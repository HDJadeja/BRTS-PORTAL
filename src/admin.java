import java.util.*;
import java.io.*;
import java.sql.*;

public class admin extends brts {

    brts objBrts;
    Connection con;
    double tdistance = 0;
    HashSet<String> businfo = new HashSet<>();

    admin(brts obj, Connection con) {
        objBrts = obj;
        this.con = con;
    }

    void addBus() throws SQLException {
        System.out.println(" \n Enter the bus number");
        String busno = hj.nextLine();
        System.out.println("ENTER SOURCE STATION :: ");
        String ss = hj.nextLine();

        objBrts.traverse(objBrts.mainstation, ss);

        if (objBrts.flag) {

            objBrts.flag = false;
            System.out.println(" ENTER DESTINATION STATION :: ");
            String ds = hj.nextLine();
            objBrts.flag = false;
            objBrts.traverse(objBrts.mainstation, ds);

            if (objBrts.flag) {

                CallableStatement addbus = con.prepareCall("{call addBUSnumber(?,?,?,?)}");
                addbus.setString(1, busno);
                addbus.setString(2, ss);
                addbus.setString(3, ds);

                ArrayList<station> al = objBrts.findroute(ss, ds);
                for (station obj : al) {
                    tdistance += obj.prevdistance;
                }
                addbus.setDouble(4, tdistance);
                addbus.execute();
                objBrts.addBusset(al, busno); // adding in the set
                busno = busno.toUpperCase(); // to bypass any conflic generated by case
                businfo.add(busno);
                objBrts.flag = false;
            } else {
                System.out.println("==> NO DESTINATION STATION FOUND <==");
            }
        } else {
            System.out.println("==> NO SOURCE STATION FOUND <==");
        }

    }

    void removeBUS(String bn) throws SQLException {

        if (businfo.remove(bn)) {
            CallableStatement removebus = con.prepareCall("{call removeBUSnumber(?)}");
            removebus.setString(1, bn);
            removebus.execute();
        } else {
            System.out.println("==> NO BUS FOUND <==");
        }
    }

    void breakdownbus(String bn) throws SQLException {

        if (businfo.contains(bn)) {

            CallableStatement bbs = con.prepareCall("{call bb(?)}");
            bbs.setString(1, bn);
            bbs.execute();
            System.out.println(" BUS " + bn + " DECLARED AS BREAKDOWN ");
        } else {
            System.out.println("==> NO BUS FOUND <==");
        }
    }

}

class passUser // use of data strucutre , which were available inbuilt
{
    String name;
    int regi_no;
    String password;
    String uniquepasscode;
    int balance = 0;

    passUser(String name, String password, int rn) {
        this.name = name;
        this.regi_no = rn;
        this.password = password;
        this.uniquepasscode = name.charAt(1) + (int) Math.random() + "" + password.charAt(1);
        System.out.println(" ==> PASS ID :: " + uniquepasscode);
    }
}
